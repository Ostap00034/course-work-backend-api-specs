# Makefile ‚Äî –≥–µ–Ω–µ—Ä–∞—Ü–∏—è Go-—Å—Ç–∞–±–æ–≤ –∏–∑ –≤—Å–µ—Ö .proto –ø–æ–¥ proto/ –≤ gen/go/

# –ü—É—Ç—å –∫ protoc
PROTOC    := protoc

# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏—Å—Ö–æ–¥–Ω–∏–∫–æ–≤ –∏ –≤—ã–≤–æ–¥–∞
PROTO_SRC := proto
PROTO_DST := gen/go

.PHONY: all generate clean

# –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å
all: generate

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Go-–∫–æ–¥–∞
generate:
	@echo "‚û° Generating Go code from Protobuf definitions..."
	@mkdir -p $(PROTO_DST)
	@find $(PROTO_SRC) -name '*.proto' | while read -r file; do \
		echo "  ‚Ä¢ $$file"; \
		$(PROTOC) -I $(PROTO_SRC) \
			--go_out=$(PROTO_DST) --go_opt paths=source_relative \
			--go-grpc_out=$(PROTO_DST) --go-grpc_opt paths=source_relative \
			"$$file"; \
	done
	@echo "‚úÖ Generation complete."

# –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
clean:
	@echo "üóë Removing generated Go files..."
	@rm -rf $(PROTO_DST)
	@echo "‚úÖ Clean complete."
